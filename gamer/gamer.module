<?php

/**
 * @file
 * Drupal gamer module
 */

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'gamer') . '/rating.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'gamer') . '/player.inc';

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'tsort') . '/tsort.module';

/**
 * hook_menu() implementation
 */
function gamer_menu() {
  $items = array();
  
  $items['gamer/players'] = array(
      'page callback' => 'gamer_players',
      'access arguments' => array('view players table'),
      'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * menu callback gamer_players to display a list of all players
 */
function gamer_players() {
  $sql = "SELECT uid FROM {users} ORDER BY name";
  // Converted to the D7 database API syntax.
  $result = db_query($sql);
  foreach ($result as $record) {
    if ($record->uid <> 0) {
      $player = new Player($record->uid);
      $stats[] = array(
          'uid' => $record->uid,
          'name' => "<a href='" . url("vchess/player/" . $player->name()) . "'>" . $player->name() . "</a>",
          'rating' => $player->rating(),
          'played' => $player->played(),
          'won' => $player->won(),
          'lost' => $player->lost(),
          'drawn' => $player->drawn(),
          'rating_change' => $player->rchange(),
          'current' => $player->current()
      );
    }
  }

  $header = array(
      array('data' => t('uid'), 'field' => 'uid'),
      array('data' => t('name'), 'field' => 'name'),
      array('data' => t('rating'), 'field' => 'rating'),
      array('data' => t('played'), 'field' => 'played'),
      array('data' => t('won'), 'field' => 'won'),
      array('data' => t('lost'), 'field' => 'lost'),
      array('data' => t('drawn'), 'field' => 'drawn'),
      array('data' => t('rating change'), 'field' => 'rating_change'),
      array('data' => t('in progress'), 'field' => 'current')
  );
  
  // getting the current sort and order parameters from the url
  // e.g. q=vchess/my_current_games&sort=asc&order=White
  $order = tablesort_get_order($header);
  $sort = tablesort_get_sort($header);
  
  // sort the table data accordingly
  $stats = tsort_nonsql_sort($stats, $sort, $order['sql']);
  
  $table['header'] = $header;
  $table['attributes'] = array();
  $table['caption'] = "";
  $table['colgroups'] = array();
  $table['sticky'] = "";
  $table['empty'] = "The message to display in an extra row if table does not have any rows.";
  $table['rows'] = $stats;

  return theme_table($table);
}

/**
 * Get the stats table for a single player
 * 
 * @param $uid
 *   User id of player for whom stats are wanted
 *   
 * @return $html
 *   A themed table of the statistics
 */
function gamer_player_stats($uid) {
  $player = new Player($uid);

  $header = array('Played', 'Won', 'Drawn', 'Lost', 'Rating', 'Rating change', 'Current');
  $rows = array(array($player->played(), $player->won(), $player->drawn(),
      $player->lost(), $player->rating(), $player->rchange(), $player->current()));

  $player = user_load($uid);

  $html = "Here are the full statistics for <b>" . $player->name . "</b>:";

  $html .= theme_table(array(
      'header' => $header,
      'rows' => $rows,
      'attributes' => array(),
      'caption' => array(),
      'colgroups' => array(),
      'sticky' => array(),
      'empty' => NULL
  ));

  return $html;
}

/**
 * Record the start of a new game
 */
function gamer_start_game($white_uid, $black_uid) {
  $white = new Player($white_uid);
  $black = new Player($black_uid);
  
  $white->set_current($white->current() + 1);
  $black->set_current($black->current() + 1);
  
  $white->save_stats();
  $black->save_stats();
}

/**
 * Empty the gamer table!
 * 
 * WARNING!  This function will empty completely the statistics table
 * for the gamer module.  It is designed to enable a clean reset of the 
 * gamer stats during testing or when a real fresh start is required.
 * 
 * @return
 *   Returns the result of the db_truncate() function
 */
function gamer_reset() {
  $result = db_truncate('gamer_stats')->execute();
  
  return $result;
}

