<?php
/**
 * @file
 * Install, update and uninstall functions for the vchess module.
 *
 */

/**
 * Define the database tables required for this module
 * 
 * There are 3 tables:
 * - vchess_games contains summary of each game 
 *   - who is playing who
 *   - whose move it is
 *   - what the current board postion is
 *   - etc.
 * 
 * - vchess_moves contains the list of moves for each game
 * 
 * - vchess_stats contains statistics about each player
 *   - how many games played
 *   - current grade
 *   - etc.
 *   
 * N.B. There are a couple of problems with the enum and timestamp not
 * currently being supported in core.  The patch solution is:
 * - http://drupal.org/node/1464354
 * - http://drupal.org/node/1466122
 * or raise an issue in vchess issue queue and I will try harder to
 * get these things into core for you!!
 */
function vchess_schema() {
  
  // Table of each game, one row per game
  $schema['vchess_games'] = array(
      'description' => 'This table contains a summary of each game',
      'fields' => array(
          'gid' => array(
              'description' => 'Game id.  A unique identifier for a particular game.',
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE,
          ),
          'turn' => array(
              'description' => 'Whose turn it is to play, either "w" (white) or "b" (black)',
              'type' => 'enum',  // See http://drupal.org/node/1464354 to get this working, or raise an issue on vchess!
              'enum' => array('w', 'b'),
              'not null' => TRUE,
              'default' => 'w',
          ),
          'status' => array(
              'description' => 'Status of the game',
              'type' => 'enum',  // See http://drupal.org/node/1464354 to get this working, or raise an issue on vchess!
              'enum' => array('in progress', '1/2-1/2', '1-0', '0-1'),
              'not null' => TRUE,
              'default' => 'in progress',
          ),
          'white_uid' => array(
              'description' => 'Userid of white player',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
          ),
          'black_uid' => array(
              'description' => 'Userid of black player',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
          ),
          'board' => array(
              'description' => 'The board position saved as standard Forsyth–Edwards Notation (FEN)',
              'type' => 'varchar',
              'length' => '72',
              'not null' => TRUE,
              'default' => 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',
          ),
          'castling_availability' => array(
              'description' => 'Castling availability. If neither side can castle, this is "-". Otherwise, this has one or more letters: "K" (White can castle kingside), "Q" (White can castle queenside), "k" (Black can castle kingside), and/or "q" (Black can castle queenside).',
              'type' => 'varchar',
              'length' => '4',
              'not null' => TRUE,
              'default' => 'KQkq',
          ),
          'en_passant_target' => array(
              'description' => 'ep (en passant) target square. If there is no ep target square, this is blank. If a pawn has just made a 2-square move, this is the position "behind" the pawn. This is recorded regardless of whether there is a pawn in position to make an ep capture.',
              'type' => 'char',
              'length' => '2',
              'not null' => TRUE,
              'default' => '',
          ),
          ),
              'primary key' => array('gid'),
      );

  // Table of the moves of each game, one row per move
  $schema['vchess_moves'] = array(
      'description' => 'Contains the list of moves for each game',
      'fields' => array(
          'gid' => array(
              'description' => 'Game id',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
          ),
          'move_no' => array(
              'description' => 'Move number',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
          ),
          'color' => array(
              'description' => 'Move color',
              'type' => 'enum',
              'enum' => array('w', 'b'),
              'not null' => TRUE,
          ),
          'long_move' => array(
              'description' => 'The actual move in full detail format, e.g. "Pe2-e4", "Nf6xBg8", "Ke1-g1"',
              'type' => 'varchar',
              'length' => '10',
              'not null' => TRUE,
          ),
          'algebraic' => array(
              'description' => 'Move in algebraic notation (e.g. "e4", "Nc3", "O-O")',
              'type' => 'varchar',
              'length' => '20',
              'not null' => TRUE,
          ),
          'timestamp' => array(
              'description' => 'Exact date and time of the move',
              'type' => 'timestamp',  // See http://drupal.org/node/1466122 or raise an issue on vchess!
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('gid', 'move_no', 'color'),
  );
  
  // Table of player statistics, one row per player  
  $schema['vchess_stats'] = array(
    'fields' => array(
      'uid' => array(
        'type' => 'varchar',
        'length' => 33,
        'not null' => TRUE,
        'default' => '',
      ),
      'current' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'won' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'drawn' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'lost' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rating' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'played' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'rchange' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
  );
  
  
  return $schema;
}
